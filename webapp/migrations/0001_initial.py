# Generated by Django 4.1.7 on 2023-06-14 00:44

from django.db import migrations, models
import webapp.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiCallErrors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=255)),
                ('error_list', models.TextField()),
                ('transaction_type', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_no', models.CharField(max_length=20, unique=True, verbose_name='Account Number')),
                ('account_name', models.CharField(max_length=255, verbose_name='Account Name')),
                ('vendor_id', models.CharField(max_length=255, verbose_name='Vendor ID')),
                ('vendor_mobile_number', models.CharField(blank=True, max_length=20, verbose_name='Vendor Mobile Number')),
                ('vendor_email', models.EmailField(blank=True, max_length=255, verbose_name='Vendor Email')),
                ('bank_name', models.CharField(max_length=255, verbose_name='Bank Name')),
                ('sort_code', models.CharField(max_length=255, verbose_name='Sort Code')),
                ('branch', models.CharField(max_length=255, verbose_name='Branch Name')),
                ('bicCode', models.CharField(max_length=355, null=True, verbose_name='BIC Code')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessedDeposits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoiceid', models.CharField(max_length=255, unique=True)),
                ('vendorid', models.CharField(max_length=255)),
                ('vendorname', models.CharField(max_length=255)),
                ('transaction_date', models.CharField(max_length=255)),
                ('amount', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('transaction_type', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('processed_by', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserLoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('ipaddress', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(blank=True, max_length=255)),
                ('cif', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('001', '001'), ('002', '002')], max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', webapp.managers.MyAbstractUserManager()),
            ],
        ),
    ]
